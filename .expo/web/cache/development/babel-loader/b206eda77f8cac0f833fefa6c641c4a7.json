{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Radu-Matei\\\\Button_App_CyclinGo\\\\node_modules\\\\react-native-shapes\\\\src\\\\chevron.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nexport var Chevron = function (_PureComponent) {\n  _inherits(Chevron, _PureComponent);\n\n  var _super = _createSuper(Chevron);\n\n  function Chevron() {\n    _classCallCheck(this, Chevron);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chevron, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          rotate = _this$props.rotate,\n          size = _this$props.size,\n          style = _this$props.style,\n          type = _this$props.type;\n      var chevronTriangle = {\n        backgroundColor: 'transparent',\n        borderWidth: 0,\n        borderTopWidth: 1.33 * size,\n        borderLeftWidth: 5 * size,\n        borderColor: 'transparent',\n        borderLeftColor: color\n      };\n\n      if (type === 'thin') {\n        return React.createElement(View, {\n          style: [{\n            borderLeftWidth: 0,\n            borderLeftColor: 'transparent',\n            borderTopWidth: 1.5 * size,\n            borderTopColor: color,\n            borderRightWidth: 1.5 * size,\n            borderRightColor: color,\n            width: 7 * size,\n            height: 7 * size,\n            transform: [{\n              translateX: 1.5 * size\n            }, {\n              translateY: -2.4 * size\n            }, {\n              rotate: rotate + 135 + \"deg\"\n            }]\n          }, style],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: [{\n          width: 10 * size,\n          height: 3.33 * size,\n          transform: [{\n            rotate: rotate + \"deg\"\n          }]\n        }, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 10 * size,\n          height: 3.33 * size,\n          backgroundColor: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [chevronTriangle, {\n          position: 'absolute',\n          top: -1.33 * size,\n          left: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [chevronTriangle, {\n          position: 'absolute',\n          top: -1.33 * size,\n          right: 0,\n          transform: [{\n            scaleX: -1\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [chevronTriangle, {\n          position: 'absolute',\n          bottom: -1.33 * size,\n          left: 0,\n          transform: [{\n            scale: -1\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [chevronTriangle, {\n          position: 'absolute',\n          bottom: -1.33 * size,\n          right: 0,\n          transform: [{\n            scaleY: -1\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Chevron;\n}(PureComponent);\nChevron.propTypes = {\n  color: PropTypes.string,\n  rotate: PropTypes.number,\n  size: PropTypes.number,\n  style: PropTypes.shape({}),\n  type: PropTypes.oneOf(['thin', 'thick'])\n};\nChevron.defaultProps = {\n  color: '#000',\n  rotate: 0,\n  size: 1,\n  style: {},\n  type: 'thin'\n};","map":{"version":3,"sources":["C:/Users/Radu-Matei/Button_App_CyclinGo/node_modules/react-native-shapes/src/chevron.js"],"names":["React","PureComponent","PropTypes","Chevron","props","color","rotate","size","style","type","chevronTriangle","backgroundColor","borderWidth","borderTopWidth","borderLeftWidth","borderColor","borderLeftColor","borderTopColor","borderRightWidth","borderRightColor","width","height","transform","translateX","translateY","position","top","left","right","scaleX","bottom","scale","scaleY","propTypes","string","number","shape","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { View } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport class Chevron extends PureComponent {\n    static propTypes = {\n        color: PropTypes.string,\n        rotate: PropTypes.number,\n        size: PropTypes.number,\n        style: PropTypes.shape({}),\n        type: PropTypes.oneOf(['thin', 'thick']),\n    };\n\n    static defaultProps = {\n        color: '#000',\n        rotate: 0,\n        size: 1,\n        style: {},\n        type: 'thin',\n    };\n\n    render() {\n        const { color, rotate, size, style, type } = this.props;\n\n        const chevronTriangle = {\n            backgroundColor: 'transparent',\n            borderWidth: 0,\n            borderTopWidth: 1.33 * size,\n            borderLeftWidth: 5 * size,\n            borderColor: 'transparent',\n            borderLeftColor: color,\n        };\n\n        if (type === 'thin') {\n            return (\n                <View\n                    style={[\n                        {\n                            borderLeftWidth: 0,\n                            borderLeftColor: 'transparent',\n                            borderTopWidth: 1.5 * size,\n                            borderTopColor: color,\n                            borderRightWidth: 1.5 * size,\n                            borderRightColor: color,\n                            width: 7 * size,\n                            height: 7 * size,\n                            transform: [\n                                { translateX: 1.5 * size },\n                                { translateY: -2.4 * size },\n                                { rotate: `${rotate + 135}deg` },\n                            ],\n                        },\n                        style,\n                    ]}\n                />\n            );\n        }\n\n        return (\n            <View\n                style={[\n                    {\n                        width: 10 * size,\n                        height: 3.33 * size,\n                        transform: [{ rotate: `${rotate}deg` }],\n                    },\n                    style,\n                ]}\n            >\n                <View\n                    style={{\n                        width: 10 * size,\n                        height: 3.33 * size,\n                        backgroundColor: color,\n                    }}\n                />\n                <View\n                    style={[\n                        chevronTriangle,\n                        {\n                            position: 'absolute',\n                            top: -1.33 * size,\n                            left: 0,\n                        },\n                    ]}\n                />\n                <View\n                    style={[\n                        chevronTriangle,\n                        {\n                            position: 'absolute',\n                            top: -1.33 * size,\n                            right: 0,\n                            transform: [{ scaleX: -1 }],\n                        },\n                    ]}\n                />\n                <View\n                    style={[\n                        chevronTriangle,\n                        {\n                            position: 'absolute',\n                            bottom: -1.33 * size,\n                            left: 0,\n                            transform: [{ scale: -1 }],\n                        },\n                    ]}\n                />\n                <View\n                    style={[\n                        chevronTriangle,\n                        {\n                            position: 'absolute',\n                            bottom: -1.33 * size,\n                            right: 0,\n                            transform: [{ scaleY: -1 }],\n                        },\n                    ]}\n                />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}